# deoplete------------------

#[[plugins]]
#repo = 'Shougo/deoplete.nvim'
#hook_post_source = '''
#  let g:deoplete#enable_at_startup = 1
#  "let g:deoplete#auto_complete_delay = 0
#'''

#[[plugins]]
#repo = 'roxma/nvim-yarp'
#
#[[plugins]]
#repo = 'roxma/vim-hug-neovim-rpc'

#--------------------------

# ddc.vim------------------

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'Shougo/ddc.vim'
on_event = 'InsertEnter'
hook_post_source = '''
  call ddc#custom#patch_global('sources', [
      \ 'around',
      \ 'file'
      \ ])
  call ddc#custom#patch_global('sourceOptions', {
      \ '_': {
      \   'matchers': ['matcher_head'],
      \   'sorters': ['sorter_rank']
      \ },
      \ 'around': {'mark': 'Around'},
      \ 'file': {
      \   'mark': 'file',
      \   'isVolatile': v:true,
      \   'forceCompletionPattern': '\S/\S*'
      \ }})
  call ddc#enable()
'''

[[plugins]]
# ポップアップウィンドウを表示する
repo = 'Shougo/pum.vim'
on_source = 'ddc.vim'
hook_post_source = '''
  call ddc#custom#patch_global('completionMenu', 'pum.vim')
  inoremap <silent><expr> <TAB>
        \ pum#visible() ? '<Cmd>call pum#map#insert_relative(+1)<CR>' :
        \ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
        \ '<TAB>' : ddc#manual_complete()
  inoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
  inoremap <C-e> <Cmd>call pum#map#cancel()<CR>
'''

[[plugins]]
# カーソル周辺の既出単語を保管するソース
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
# ファイル名を補完するソース
repo = 'LumaKernel/ddc-file'
on_source = 'ddc.vim'

[[plugins]]
# 入力中の単語を補完の対象にするフィルタ
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
# 補完候補をソートするフィルタ
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
# 補完候補の重複を防ぐフィルタ
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = 'ddc.vim'
#--------------------------
